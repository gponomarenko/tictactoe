{"version":3,"sources":["components/Field/Field.jsx","components/Intro/Intro.jsx","components/Modal/Modal.jsx","patterns/Patterns.js","App.js","index.js"],"names":["Field","value","chooseField","className","onClick","Intro","submitPlayers","name1","name2","setName1","setName2","onSubmit","type","name","onChange","e","target","console","log","Modal","active","cn","modal","modal__content","Patterns","App","useState","Array","fill","board","setBoard","player","setPlayer","winner","state","result","setResult","modalActive","setModalActive","players","setPlayers","games","setGames","gamesIncrease","useCallback","checkWin","forEach","currPattern","firstPlayer","foundWinningPattern","index","checkIfTie","filled","field","useEffect","alert","map","v","i","ar","key","length","wins","setActive","event","preventDefault","player1","player2","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9c68148.chunk.js","sourcesContent":["import React from 'react';\nimport '../../App.css';\n\nfunction Field({ value, chooseField }) {\n  return (\n    <div className=\"Field\" onClick={chooseField}>\n      {value}\n    </div>\n  );\n}\n\nexport default Field;\n","import React, { useState } from 'react';\nimport './intro.css';\n\nfunction Intro({ submitPlayers, name1, name2, setName1, setName2 }) {\n\n  const handleChange1 = (e) => {\n    setName1(e.target.value);\n    console.log(e.target.value);\n  };\n\n  const handleChange2 = (e) => {\n    setName2(e.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"players\" onSubmit={submitPlayers}>\n        <h3>Input 1st player&apos;s name:</h3>\n        <input\n          className=\"players__input\"\n          type=\"text\"\n          name=\"name1\"\n          // placeholder=\"1st player name\"\n          value={name1}\n          onChange={handleChange1}\n        />\n        <h3>Input 2d player&apos;s name:</h3>\n        <input\n          className=\"players__input\"\n          type=\"text\"\n          name=\"name2\"\n          // placeholder=\"2d player name\"\n          value={name2}\n          onChange={handleChange2}\n        />\n        <button\n          className=\"players__submit\"\n          type=\"submit\"\n          // name=\"submitPlayers\"\n\n        >\n          Start game\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Intro;\n","import React from 'react';\nimport cn from 'classnames';\nimport Intro from '../Intro/Intro';\nimport './modal.css';\n\nfunction Modal({ active, submitPlayers, name1, name2, setName1, setName2 }) {\n  return (\n    <div\n      className={cn({\n        modal: true,\n        active: active === true,\n        'non-active': !active,\n      })}\n    >\n      <div\n        className={cn({\n          modal__content: true,\n          active: active === true,\n          'non-active': !active,\n        })}\n      >\n        <Intro\n          submitPlayers={submitPlayers}\n          name1={name1}\n          name2={name2}\n          setName1={setName1}\n          setName2={setName2}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","const Patterns = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nexport default Patterns;\n","/* eslint-disable react/no-array-index-key */\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Field from './components/Field/Field'\nimport Modal from './components/Modal/Modal';\nimport Patterns from './patterns/Patterns';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(''));\n  const [player, setPlayer] = useState('O');\n  const [result, setResult] = useState({ winner: 'none', state: 'none' });\n  const [modalActive, setModalActive] = useState(true);\n  const [name1, setName1] = useState('');\n  const [name2, setName2] = useState('');\n  const [players, setPlayers] = useState([]);\n  const [games, setGames] = useState(0);\n\n  const gamesIncrease = useCallback(() => {\n    setGames(games + 1);\n  }, [result]);\n\n  // const changeScore = () => {\n  //   if (games % 2 === 0) {\n  //     setPlayers();\n  //   }\n\n  //   setPlayers([...players, players[1].wins + 1]);\n  // }\n\n  const chooseField = (field) => {\n    setBoard(board.map((value, index) => {\n      if (index === field && value === '') {\n        return player;\n      }\n\n      return value;\n    }));\n  };\n\n  const checkWin = useCallback(() => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n\n      if (firstPlayer === '') {\n        return;\n      }\n\n      let foundWinningPattern = true;\n\n      currPattern.forEach((index) => {\n        if (board[index] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: 'won' });\n        console.log(`${player} won!`);\n        gamesIncrease();\n        // changeScore();\n      }\n    });\n  }, [board, player]);\n\n  const checkIfTie = useCallback(() => {\n    let filled = true;\n\n    board.forEach((field) => {\n      if (field === '') {\n        filled = false;\n      }\n    });\n    if (filled) {\n      setResult({ winner: 'No One', state: 'Tie' });\n      gamesIncrease();\n    }\n  }, [board]);\n\n  const restartGame = () => {\n    setBoard(Array(9).fill(''));\n  };\n\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n    if (player === 'X') {\n      setPlayer('O');\n    } else {\n      setPlayer('X');\n    }\n  }, [board]);\n\n  useEffect(() => {\n    if (result.state !== 'none') {\n      alert(`Game Finished! Winning player: ${result.winner}`);\n    }\n  }, [result]);\n\n  const submitPlayers = (event) => {\n    event.preventDefault();\n    const player1 = {\n      name: name1,\n      wins: 0,\n    };\n\n    const player2 = {\n      name: name2,\n      wins: 0,\n    };\n\n    setPlayers(() => [player1, player2]);\n    setName1('');\n    setName2('');\n    setModalActive(false);\n    console.log('non-active');\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"frame\">\n        <div className=\"board\">\n          {board.map((v, i, ar) => (\n            <Field\n              key={i}\n              value={board[i]}\n              chooseField={() => {\n                chooseField(i);\n              }}\n            />\n          ))\n          }\n        </div>\n      </div>\n\n      <div className=\"frame\">\n        <p>\n          Score\n        </p>\n        <p>\n          {`${players.length && players[0].name}:\n          ${players.length && players[0].wins}`}\n        </p>\n        <p>\n          {`${players.length && players[1].name}:\n          ${players.length && players[1].wins}`}\n        </p>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={restartGame}\n        >\n          Clear board\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setModalActive(true)}\n        >\n          Set new players\n        </button>\n      </div>\n      <Modal\n        active={modalActive}\n        setActive={setModalActive}\n        submitPlayers={submitPlayers}\n        name1={name1}\n        name2={name2}\n        setName1={setName1}\n        setName2={setName2}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
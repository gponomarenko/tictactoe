{"version":3,"sources":["components/Field/Field.jsx","components/Intro/Intro.jsx","components/Modal/Modal.jsx","patterns/Patterns.js","components/Grid/Grid.jsx","components/Combis/Combis.jsx","App.js","index.js"],"names":["Field","value","chooseField","className","cn","field","onClick","Intro","submitPlayers","name1","name2","setName1","setName2","onSubmit","htmlFor","type","name","placeholder","id","onChange","e","target","required","Modal","active","modal","modal__content","Patterns","Grid","Combis","winStyle","winline","App","useState","Array","fill","board","setBoard","symbol","setSymbol","result","setResult","combi","setCombi","setWinStyle","modalActive","setModalActive","player1","setPlayer1","player2","setPlayer2","win1","setWin1","win2","setWin2","games","setGames","isNewGame","setNewGame","checkWin","useCallback","forEach","currPattern","firstPlayer","foundWinningPattern","index","number","useEffect","filled","checkIfTie","length","combyStyle","concat","join","getCombiStyle","alert","map","v","i","key","setActive","event","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36d43dda.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport './field.css';\nimport cn from 'classnames';\nimport PT from 'prop-types';\n\nexport const Field = ({ value, chooseField }) => {\n  return (\n    <div\n      className={\n        cn({\n          field: true,\n          'o-style': value === 'O',\n          'x-style': value === 'X',\n        })\n      }\n      onClick={chooseField}\n    />\n  );\n};\n\nField.propTypes = {\n  value: PT.string.isRequired,\n  chooseField: PT.func.isRequired,\n};\n","import React from 'react';\nimport './intro.css';\nimport PT from 'prop-types';\n\nexport const Intro = ({ submitPlayers, name1, name2, setName1, setName2 }) => {\n  const handleChange1 = (e) => {\n    setName1(e.target.value);\n  };\n\n  const handleChange2 = (e) => {\n    setName2(e.target.value);\n  };\n\n  return (\n    <>\n      <form className=\"players\" onSubmit={submitPlayers}>\n        <label htmlFor=\"id-1st\">\n          <h3 className=\"players__title\">Input 1st player&apos;s name:</h3>\n        </label>\n        <input\n          className=\"players__input\"\n          type=\"text\"\n          name=\"name1\"\n          placeholder=\"1st player name\"\n          id=\"id-1st\"\n          value={name1}\n          onChange={handleChange1}\n          required\n        />\n        <label htmlFor=\"id-2d\">\n          <h3 className=\"players__title\">\n            Input 2d player&apos;s name:\n          </h3>\n        </label>\n        <input\n          className=\"players__input\"\n          type=\"text\"\n          name=\"name2\"\n          id=\"id-2d\"\n          placeholder=\"2d player name\"\n          value={name2}\n          onChange={handleChange2}\n          required\n        />\n\n        <button\n          className=\"players__submit\"\n          type=\"submit\"\n          name=\"submitPlayers\"\n        >\n          Start game\n        </button>\n      </form>\n    </>\n  );\n};\n\nIntro.propTypes = {\n  submitPlayers: PT.func.isRequired,\n  name1: PT.string.isRequired,\n  name2: PT.string.isRequired,\n  setName1: PT.func.isRequired,\n  setName2: PT.func.isRequired,\n};\n","import React from 'react';\nimport cn from 'classnames';\nimport { Intro } from '../Intro';\nimport './modal.css';\n\nexport const Modal = ({ active, submitPlayers, name1, name2, setName1, setName2 }) => {\n  return (\n    <div\n      className={cn({\n        modal: true,\n        active: active === true,\n        'non-active': !active,\n      })}\n    >\n      <div\n        className={cn({\n          modal__content: true,\n          active: active === true,\n          'non-active': !active,\n        })}\n      >\n        <Intro\n          submitPlayers={submitPlayers}\n          name1={name1}\n          name2={name2}\n          setName1={setName1}\n          setName2={setName2}\n        />\n      </div>\n    </div>\n  );\n};\n","export const Patterns = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n","import React from 'react';\nimport './grid.css';\n\nexport const Grid = () => (\n  <>\n    <div className='gridline vertical first' />\n    <div className='gridline vertical second' />\n    <div className='gridline horizontal first' />\n    <div className='gridline horizontal second' />\n  </>\n);\n","import React from 'react';\nimport './combis.css';\nimport cn from 'classnames';\nimport PT from 'prop-types';\n\nexport const Combis = ({ winStyle }) => {\n\n  return (\n    <>\n      <div className={cn({\n        winline: winStyle && winStyle !== 'cs-0',\n        winStyle,\n      })}\n      />\n    </>\n  );\n};\n\nCombis.propTypes = {\n  winStyle: PT.string.isRequired,\n};\n","/* eslint-disable react/no-array-index-key */\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Field } from './components/Field';\nimport { Modal } from './components/Modal';\nimport { Patterns } from './patterns';\nimport { Grid } from './components/Grid';\nimport { Combis } from './components/Combis';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(null));\n\n  const [symbol, setSymbol] = useState('O');\n  const [result, setResult] = useState(null);\n  const [combi, setCombi] = useState([]);\n  const [winStyle, setWinStyle] = useState(null);\n\n  const [modalActive, setModalActive] = useState(true);\n  const [name1, setName1] = useState('');\n  const [name2, setName2] = useState('');\n  const [player1, setPlayer1] = useState(null);\n  const [player2, setPlayer2] = useState(null);\n\n  const [win1, setWin1] = useState(0);\n  const [win2, setWin2] = useState(0);\n  const [games, setGames] = useState(0);\n  const [isNewGame, setNewGame] = useState(false);\n\n  const chooseField = (field) => {\n    setBoard(board.map((value, index) => {\n      if (index === field && !value) {\n        return symbol;\n      }\n\n      return value;\n    }));\n  };\n\n  const getCombiStyle = () => {\n    const combyStyle = 'cs-'.concat(combi.join(''));\n\n    return combi && setWinStyle(combyStyle);\n  };\n\n  const restartGame = () => {\n    setBoard(Array(9).fill(null));\n    setResult(null);\n    setCombi([]);\n    setWinStyle(null);\n  };\n\n  const checkWin = useCallback(() => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n\n      if (!firstPlayer) {\n        return;\n      }\n\n      let foundWinningPattern = true;\n\n      currPattern.forEach((index) => {\n        if (board[index] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setCombi(currPattern);\n        setResult(symbol);\n        setGames(number => number + 1);\n      }\n    });\n  }, [board, symbol]);\n\n  const checkIfTie = () => {\n    let filled = true;\n\n    board.forEach((field) => {\n      if (!field) {\n        filled = false;\n      }\n    });\n\n    if (filled) {\n      setResult('Tie');\n      setCombi([0]);\n      setGames(number => number + 1);\n    }\n  };\n\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n  }, [board]);\n\n  useEffect(() => {\n    if (!result && !combi.length) {\n      switch (symbol) {\n        case 'X':\n          setSymbol('O');\n          break;\n\n        case 'O':\n          setSymbol('X');\n          break;\n\n        default:\n      }\n    }\n  }, [board]);\n\n  useEffect(() => {\n    if (result && combi.length) {\n      switch (result) {\n        case 'X':\n          setWin1(number => number + 1);\n          break;\n\n        case 'O':\n          setWin2(number => number + 1);\n          break;\n\n        case 'Tie':\n          setWin1(number => number + 0.5);\n          setWin2(number => number + 0.5);\n          break;\n\n        default:\n      }\n\n      getCombiStyle();\n    }\n  }, [result, combi]);\n\n  useEffect(() => {\n    if (winStyle && result) {\n      switch (result) {\n        case 'Tie':\n          alert('Draw! Winner was not defined');\n          break;\n\n        case 'X':\n          alert(`Player ${player1} won!`);\n          break;\n\n        case 'O':\n          alert(`Player ${player2} won!`);\n          break;\n\n        default:\n      }\n\n      setSymbol('O');\n      setNewGame(true);\n    }\n  }, [winStyle]);\n\n  useEffect(() => {\n    if (isNewGame) {\n      restartGame();\n    }\n\n    return () => {\n      setNewGame(false);\n    };\n  });\n\n  const submitPlayers = (event) => {\n    event.preventDefault();\n    setPlayer1(name1);\n    setPlayer2(name2);\n    setName1('');\n    setName2('');\n    setModalActive(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"frame left\">\n          {winStyle\n            && <Combis winStyle={winStyle} />\n          }\n          <div className=\"board win\">\n            <Grid />\n            {board.map((v, i) => (\n              <Field\n                key={i}\n                value={v}\n                chooseField={() => {\n                  chooseField(i);\n                }}\n              />\n            ))\n            }\n          </div>\n        </div>\n\n        <div className=\"frame right\">\n          <p className=\"frame__score\">\n            Score\n          </p>\n          {player1 ? (\n            <p className=\"frame__score\">\n              {`${player1 && player1}:\n              ${win1 && win1}`}\n            </p>\n          ) : (<p className=\"frame__score\">Player: 0</p>)}\n          {player2 ? (\n            <p className=\"frame__score\">\n              {`${player2 && player2}:\n              ${win2 && win2}`}\n            </p>\n          ) : (<p className=\"frame__score\">Player2: 0</p>)}\n          {games > 0 && (\n            <p className=\"frame__score\">\n              {`Games: ${games}`}\n            </p>\n          )}\n        </div>\n        <Modal\n          active={modalActive}\n          setActive={setModalActive}\n          submitPlayers={submitPlayers}\n          name1={name1}\n          name2={name2}\n          setName1={setName1}\n          setName2={setName2}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
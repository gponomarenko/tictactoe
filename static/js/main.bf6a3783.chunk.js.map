{"version":3,"sources":["components/Square/Square.jsx","components/Intro/Intro.jsx","components/Modal/Modal.jsx","patterns/Patterns.js","components/PlayersContext/PlayersContext.jsx","App.js","index.js"],"names":["Square","value","chooseSquare","className","onClick","Intro","props","type","name","placeholder","Modal","active","setActive","Patterns","PlayersContext","React","createContext","App","useState","Array","fill","board","setBoard","player","setPlayer","winner","state","result","setResult","modalActive","setModalActive","players","setPlayers","useEffect","checkWin","checkIfTie","alert","forEach","currPattern","firstPlayer","foundWinningPattern","index","console","log","filled","square","Provider","map","v","i","ar","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf6a3783.chunk.js","sourcesContent":["import React from 'react';\nimport '../../App.css';\n\nfunction Square({ value, chooseSquare }) {\n  return (\n    <div className=\"square\" onClick={chooseSquare}>\n      {value}\n    </div>\n  );\n}\n\nexport default Square;\n","import React from 'react';\n\nfunction Intro(props) {\n  return (\n    <>\n      <form>\n        <input\n          type=\"text\"\n          name=\"player1\"\n          placeholder=\"1st player name\"\n        />\n        <input\n          type=\"text\"\n          name=\"player2\"\n          placeholder=\"2st player name\"\n        />\n        <button\n          type=\"submit\"\n        >\n          Confirm\n        </button>\n      </form>\n    </>\n  );\n}\n\nexport default Intro;\n","import React from 'react';\nimport Intro from '../Intro/Intro';\nimport './modal.css';\n\nfunction Modal({ active, setActive }) {\n  return (\n    <div\n      className={active ? \"modal active\" : \"modal\"}\n      onClick={() => setActive(false)}\n    >\n      <div\n        className={active ? \"modal__content active\" : \"modal__content\"}\n        onClick={() => setActive(false)}\n      >\n        input players here\n        <Intro />\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","const Patterns = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n\nexport default Patterns;\n","import React from 'react';\n\nexport const PlayersContext = React.createContext('players');\n","/* eslint-disable react/no-array-index-key */\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Square from './components/Square/Square';\nimport Modal from './components/Modal/Modal';\nimport Patterns from './patterns/Patterns';\nimport { PlayersContext } from './components/PlayersContext/PlayersContext';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(''));\n  const [player, setPlayer] = useState('O');\n  const [result, setResult] = useState({ winner: 'none', state: 'none' });\n  const [modalActive, setModalActive] = useState(true);\n  const [players, setPlayers] = useState(['', '']);\n\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n    if (player === 'X') {\n      setPlayer('O');\n    } else {\n      setPlayer('X');\n    }\n  }, [board]);\n\n  useEffect(() => {\n    if (result.state !== 'none') {\n      alert(`Game Finished! Winning player: ${result.winner}`);\n    }\n  }, [result]);\n\n  const chooseSquare = (square) => {\n    setBoard(board.map((value, index) => {\n      if (index === square && value === '') {\n        return player;\n      }\n\n      return value;\n    }));\n  };\n\n  const checkWin = () => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n\n      if (firstPlayer === '') return;\n      let foundWinningPattern = true;\n\n      currPattern.forEach((index) => {\n        if (board[index] !== firstPlayer) {\n          foundWinningPattern = false;\n          console.log(`pattern is not found`);\n        }\n      });\n      if (foundWinningPattern) {\n        setResult({ winner: player, state: 'won' });\n        console.log(`${player} won!`);\n      }\n    });\n  };\n\n  const checkIfTie = () => {\n    let filled = true;\n\n    board.forEach((square) => {\n      if (square === '') {\n        filled = false;\n      }\n    });\n    if (filled) {\n      setResult({ winner: 'No One', state: 'Tie' });\n      console.log('Tie!');\n    }\n  };\n\n  const restartGame = () => {\n    setBoard(Array(9).fill(''));\n  };\n\n  return (\n    <PlayersContext.Provider\n      value={players}\n      setPlayers={setPlayers}\n    >\n    <div className=\"App\">\n      <div className=\"frame\">\n        <div className=\"board\">\n          {board.map((v, i, ar) => (\n            <Square\n              key={i}\n              value={board[i]}\n              chooseSquare={() => {\n                chooseSquare(i);\n              }}\n            />\n          ))\n          }\n        </div>\n      </div>\n\n      <div className=\"frame\">\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={restartGame}\n        >\n          Clear board\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          onClick={() => setModalActive(true)}\n        >\n          Input new players\n        </button>\n      </div>\n      <Modal active={modalActive} setActive={setModalActive} />\n    </div>\n    </PlayersContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
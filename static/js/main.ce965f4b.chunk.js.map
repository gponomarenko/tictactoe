{"version":3,"sources":["components/Field/Field.jsx","components/Modal/Modal.jsx","patterns/Patterns.js","App.js","index.js"],"names":["Field","value","chooseField","className","cn","field","grid","x","o","onClick","Modal","Patterns","App","useState","Array","fill","board","setBoard","symbol","setSymbol","winner","state","result","setResult","player1","player2","win1","setWin1","win2","setWin2","games","setGames","gamesIncrease","useCallback","restartGame","prevState","checkWin","forEach","currPattern","firstPlayer","foundWinningPattern","index","console","log","checkIfTie","filled","useEffect","alert","map","v","i","ar","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce965f4b.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react';\nimport '../../App.css';\nimport './field.css';\nimport cn from 'classnames';\n\nfunction Field({ value, chooseField }) {\n  return (\n    <div\n      className={\n        cn({\n          field: true,\n          grid: true,\n          x: value === 'X',\n          o: value === 'O',\n        })\n      }\n      onClick={chooseField}\n    />\n  );\n}\n\nexport default Field;\n","import React from 'react';\nimport cn from 'classnames';\nimport Intro from '../Intro/Intro';\nimport './modal.css';\n\nfunction Modal({ active, submitPlayers, name1, name2, setName1, setName2 }) {\n  return (\n    <div\n      className={cn({\n        modal: true,\n        active: active === true,\n        'non-active': !active,\n      })}\n    >\n      <div\n        className={cn({\n          modal__content: true,\n          active: active === true,\n          'non-active': !active,\n        })}\n      >\n        <Intro\n          submitPlayers={submitPlayers}\n          name1={name1}\n          name2={name2}\n          setName1={setName1}\n          setName2={setName2}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Modal;\n","const Patterns = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6],\n];\n\nexport default Patterns;\n","/* eslint-disable react/no-array-index-key */\nimport './App.css';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Field from './components/Field/Field';\nimport Modal from './components/Modal/Modal';\nimport Patterns from './patterns/Patterns';\n\nfunction App() {\n  const [board, setBoard] = useState(Array(9).fill(''));\n  const [symbol, setSymbol] = useState('O');\n  const [result, setResult] = useState({ winner: 'none', state: 'none' });\n  const [modalActive, setModalActive] = useState(true);\n  const [name1, setName1] = useState('');\n  const [name2, setName2] = useState('');\n  const [player1, setPlayer1] = useState(null);\n  const [player2, setPlayer2] = useState(null);\n  const [win1, setWin1] = useState(0);\n  const [win2, setWin2] = useState(0);\n  const [games, setGames] = useState(0);\n\n  const gamesIncrease = useCallback(() => {\n    setGames(games + 1);\n  }, [result]);\n\n  const chooseField = (field) => {\n    setBoard(board.map((value, index) => {\n      if (index === field && value === '') {\n        return (symbol);\n      }\n\n      return value;\n    }));\n  };\n\n  const restartGame = () => {\n    setBoard(Array(9).fill(''));\n    setResult(prevState => ({\n      ...prevState,\n      'winner': 'none',\n      'state': 'none'\n    }));\n  };\n\n  const checkWin = useCallback(() => {\n    Patterns.forEach((currPattern) => {\n      const firstPlayer = board[currPattern[0]];\n\n      if (firstPlayer === '') {\n        return;\n      }\n\n      let foundWinningPattern = true;\n\n      currPattern.forEach((index) => {\n        if (board[index] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n      if (foundWinningPattern) {\n        setResult(prevState => ({\n          ...prevState,\n          winner: symbol,\n          state: 'won',\n        }));\n        console.log(`${symbol} won!`);\n        console.log(result.symbol, result.state);\n        gamesIncrease();\n\n        if (symbol === 'X') {\n          setWin1(win1 + 1);\n        } else {\n          setWin2(win2 + 1);\n        }\n        restartGame();\n        console.log(`symbol after restart ${symbol}`);\n        if (games % 2 === 0) {\n          setSymbol('X');\n          console.log('set x');\n        } else {\n          setSymbol('O');\n          console.log('set o');\n        }\n        restartGame();\n        console.log(`symbol after settings ${symbol}`);\n      }\n    });\n  }, [board]);\n\n  const checkIfTie = useCallback(() => {\n    let filled = true;\n\n    board.forEach((field) => {\n      if (field === '') {\n        filled = false;\n      }\n    });\n    if (filled) {\n      setResult({ winner: 'No One', state: 'Tie' });\n      gamesIncrease();\n      setWin1(win1 + 0.5);\n      setWin2(win2 + 0.5);\n      restartGame();\n    }\n  }, [board]);\n\n  useEffect(() => {\n    checkWin();\n    checkIfTie();\n    if (result.state === 'none') {\n      switch (symbol) {\n        case 'X':\n          setSymbol('O');\n          break;\n\n        case 'O':\n          setSymbol('X');\n          break;\n\n        default:\n          setSymbol('X');\n          break;\n      }\n    }\n  }, [board, result]);\n\n  useEffect(() => {\n    if (result.state !== 'none') {\n      alert(`Game Finished! Winning player: ${result.winner}`);\n    }\n  }, [result]);\n\n  const submitPlayers = (event) => {\n    event.preventDefault();\n    setPlayer1(name1);\n    setPlayer2(name2);\n    setName1('');\n    setName2('');\n    setModalActive(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"frame left\">\n          <div className=\"board win\">\n            {board.map((v, i, ar) => (\n              <Field\n                key={i}\n                value={board[i]}\n                chooseField={() => {\n                  chooseField(i);\n                }}\n              />\n            ))\n            }\n          </div>\n        </div>\n\n        <div className=\"frame right\">\n          <p className=\"frame__score\">\n            Score\n          </p>\n          {player1 ? (\n            <p className=\"frame__score\">\n              {`${player1 && player1}:\n              ${win1 && win1}`}\n            </p>\n          ) : (<p className=\"frame__score\">Player: 0</p>)}\n          {player2 ? (\n            <p>\n              {`${player2 && player2}:\n              ${win2 && win2}`}\n            </p>\n          ) : (<p className=\"frame__score\">Player2: 0</p>)}\n\n        </div>\n        {/* <Modal\n          active={modalActive}\n          setActive={setModalActive}\n          submitPlayers={submitPlayers}\n          name1={name1}\n          name2={name2}\n          setName1={setName1}\n          setName2={setName2}\n        /> */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}